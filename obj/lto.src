	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_draw_no_device_screen
_draw_no_device_screen:
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 10
	push	hl
	push	hl
	ld	hl, _.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	jp	_gfx_SwapDraw
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_networks
_draw_networks:
	ld	hl, -9
	call	__frameset
	ld	hl, _ssids
	ld	(ix - 3), hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	ld	bc, 0
	pop	hl
	ld	iy, 10
BB1_1:
	ld	de, (_network_count)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB1_3
	push	iy
	ld	hl, 10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 6), bc
	ld	(ix - 9), iy
	call	_gfx_PrintStringXY
	ld	bc, (ix - 6)
	pop	hl
	pop	hl
	pop	hl
	inc	bc
	ld	iy, (ix - 3)
	lea	iy, iy + 32
	ld	(ix - 3), iy
	ld	de, 10
	ld	iy, (ix - 9)
	add	iy, de
	jr	BB1_1
BB1_3:
	ld	sp, ix
	pop	ix
	jp	_gfx_SwapDraw
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_password_screen
_draw_password_screen:
	ld	hl, -6
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 6), hl
	ld	hl, (ix + 9)
	ld	(ix - 3), hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 10
	push	hl
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, 100
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_PrintStringXY
	ld	sp, ix
	pop	ix
	jp	_gfx_SwapDraw
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_usb_event_handler
_usb_event_handler:
	ld	hl, -22
	call	__frameset
	ld	de, (ix + 6)
	ld	iy, 0
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nz, BB3_2
	ld	hl, 0
	ld	(_device), hl
	jp	BB3_14
BB3_2:
	ld	bc, 2
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nz, BB3_4
	ld	hl, (ix + 9)
	ld	(_device), hl
	push	hl
	call	_usb_ResetDevice
	ld	iy, 0
	pop	hl
	jp	BB3_14
BB3_4:
	ld	bc, 4
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	bc, (ix + 9)
	jp	nz, BB3_14
	ld	hl, (_device)
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_14
	ld	iy, 2
	ld	de, 9
	lea	hl, ix - 9
	ld	(ix - 15), hl
	pea	ix - 12
	push	de
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	iy
	push	bc
	call	_usb_GetDescriptor
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_device)
	ld	de, (ix - 12)
	push	de
	ld	de, (ix - 15)
	push	de
	push	hl
	call	_usb_SetConfiguration
	ld	bc, 0
	ld	iy, 0
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix - 9)
	push	bc
	pop	de
	ld	e, a
	ld	hl, (ix - 15)
	add	hl, de
	push	bc
	pop	de
	ld	e, (hl)
	ld	(ix - 15), hl
	add	hl, de
	ld	(ix - 18), hl
	push	bc
	pop	hl
	lea	bc, iy
BB3_7:
	push	hl
	pop	de
	ld	iy, (ix - 15)
	ld	e, (iy + 4)
	push	hl
	pop	iy
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nc, BB3_13
	ld	(ix - 21), bc
	ld	de, (ix - 18)
	lea	hl, iy
	push	de
	pop	iy
	ld	a, (iy + 3)
	and	a, 3
	cp	a, 2
	jr	nz, BB3_12
	ld	a, (iy + 2)
	ld	(ix - 22), a
	ld	hl, (_device)
	ld	e, a
	push	de
	push	hl
	call	_usb_GetDeviceEndpoint
	pop	de
	pop	de
	ld	a, (ix - 22)
	cp	a, 0
	call	pe, __setflag
	ld	iy, _endpoint_out
	jp	p, BB3_11
	ld	iy, _endpoint_in
BB3_11:
	ld	(iy), hl
	ld	bc, 0
	push	bc
	pop	hl
	ld	iy, (ix - 18)
BB3_12:
	ld	bc, (ix - 21)
	inc	bc
	push	hl
	pop	de
	ld	e, (iy)
	add	iy, de
	ld	(ix - 18), iy
	jr	BB3_7
BB3_13:
	ld	iy, 0
BB3_14:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_init_usb
_init_usb:
	ld	hl, _usb_event_handler
	ld	de, 0
	ld	bc, 3338
	push	bc
	push	de
	push	de
	push	hl
	call	_usb_Init
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_send_command
_send_command:
	ld	hl, -3
	call	__frameset
	ld	hl, (_endpoint_out)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB5_2
	ld	de, (ix + 6)
	push	de
	ld	(ix - 3), hl
	call	_strlen
	pop	de
	ld	de, 0
	push	de
	push	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_usb_ScheduleTransfer
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB5_2:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_receive_response
_receive_response:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, (ix + 9)
	ld	de, 0
	dec	bc
	ld	(ix - 6), bc
BB6_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nc, BB6_4
	ld	bc, (_endpoint_in)
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB6_5
	ld	iy, (ix + 6)
	ld	(ix - 9), de
	add	iy, de
	ex	de, hl
	call	__inot
	ld	de, (ix + 9)
	add	hl, de
	pea	ix - 3
	push	bc
	pop	de
	ld	bc, 1000
	push	bc
	push	hl
	push	iy
	push	de
	call	_usb_Transfer
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	pop	iy
	ld	de, (ix - 9)
	add	iy, de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	de, iy
	ld	iy, (ix + 6)
	ld	bc, (ix - 6)
	jr	nz, BB6_1
BB6_4:
	add	iy, de
	ld	(iy), 0
	ld	sp, ix
	pop	ix
	ret
BB6_5:
	jr	BB6_5
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_scan_wifi
_scan_wifi:
	ld	hl, -1033
	call	__frameset
	ld	hl, _.str.4
	ld	bc, -1030
	lea	iy, ix
	add	iy, bc
	lea	de, iy
	push	ix
	ld	bc, -1033
	add	ix, bc
	ld	(ix), de
	pop	ix
	push	hl
	call	_send_command
	pop	hl
	ld	hl, 1024
	push	hl
	ld	bc, -1033
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_receive_response
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	(_network_count), hl
	ld	hl, _.str.5
	push	hl
	ld	bc, -1033
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strtok
	push	hl
	pop	bc
	pop	hl
	pop	hl
	ld	a, 5
BB7_1:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB7_4
	ld	iy, (_network_count)
	lea	hl, iy
	ld	de, 20
	or	a, a
	sbc	hl, de
	push	bc
	pop	de
	call	pe, __setflag
	jp	p, BB7_4
	lea	hl, iy
	inc	hl
	ld	(_network_count), hl
	lea	hl, iy
	ld	c, a
	call	__ishl
	push	hl
	pop	bc
	ld	hl, _ssids
	add	hl, bc
	ld	bc, 32
	push	bc
	push	de
	push	hl
	call	_strncpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.5
	push	hl
	ld	hl, 0
	push	hl
	call	_strtok
	ld	a, 5
	push	hl
	pop	bc
	pop	hl
	pop	hl
	jr	BB7_1
BB7_4:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_connect_wifi
_connect_wifi:
	ld	hl, -268
	call	__frameset
	ld	iy, (ix + 9)
	ld	bc, 128
	ld	(ix - 3), bc
	ld	bc, -134
	lea	hl, ix
	add	hl, bc
	push	hl
	pop	de
	push	ix
	ld	bc, -268
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, -262
	lea	hl, ix
	add	hl, bc
	push	ix
	ld	bc, -265
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	iy
	ld	hl, (ix + 6)
	push	hl
	ld	hl, _.str.6
	push	hl
	ld	bc, (ix - 3)
	push	bc
	push	de
	call	_snprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_send_command
	pop	hl
	ld	hl, 128
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_receive_response
	pop	hl
	pop	hl
	ld	hl, _.str.7
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strstr
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB8_2
	ld	hl, _.str.8
	jr	BB8_3
BB8_2:
	ld	hl, _.str.9
BB8_3:
	ld	de, 50
	push	de
	ld	de, 10
	push	de
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_get_ascii_from_kb_data
_get_ascii_from_kb_data:
	ld	hl, -12
	call	__frameset
	call	_kb_Scan
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 32
	call	__sand
	ld	e, l
	ld	d, h
	ld	hl, -720876
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 128
	call	__sand
	ld	(ix - 7), de
	ld	a, e
	or	a, a
	ld	e, -1
	ld	c, b
	ld	a, e
	jr	nz, BB9_2
	ld	a, c
BB9_2:
	ld	(ix - 11), a
	ld	a, l
	or	a, a
	ld	(ix - 1), e
	jr	nz, BB9_4
	ld	(ix - 1), c
BB9_4:
	ld	(ix - 10), hl
	ld	iy, 1
BB9_5:
	ld	de, 7
	ld	c, 1
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jp	z, BB9_176
	lea	hl, iy
	call	__ishl
	push	hl
	pop	de
	ld	hl, -720880
	add	hl, de
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	(ix - 4), hl
	ld	a, l
	or	a, a
	jr	nz, BB9_8
BB9_7:
	inc	iy
	jr	BB9_5
BB9_8:
	xor	a, a
	ld	bc, 0
BB9_9:
	push	bc
	pop	hl
	ld	de, 8
	or	a, a
	sbc	hl, de
	jr	z, BB9_7
	ld	(ix - 12), a
	ld	hl, 1
	call	__ishl
	ld	a, l
	ld	hl, (ix - 4)
	and	a, l
	or	a, a
	jr	z, BB9_12
	ld	a, iyl
	dec	a
	ld	de, 0
	cp	a, 6
	jr	c, BB9_13
BB9_12:
	inc	bc
	ld	a, (ix - 12)
	inc	a
	jr	BB9_9
BB9_13:
	ld	e, a
	ld	hl, JTI9_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB9_14:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB9_16
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_183
BB9_16:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB9_18
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_189
BB9_18:
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	nz, BB9_20
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_195
BB9_20:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_22
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_199
BB9_22:
	push	bc
	pop	hl
	ld	de, 2
	or	a, a
	sbc	hl, de
	jp	z, BB9_194
	push	bc
	pop	hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	ld	l, -1
	jr	nz, BB9_25
	ld	l, 0
BB9_25:
	ld	de, (ix - 10)
	ld	a, e
	or	a, a
	ld	e, -1
	jr	z, BB9_27
	ld	e, 0
BB9_27:
	ld	a, l
	or	a, e
	ld	l, a
	bit	0, l
	jr	nz, BB9_29
	ld	de, (ix - 7)
	ld	a, e
	or	a, a
	jp	nz, BB9_204
BB9_29:
	bit	0, l
	jr	nz, BB9_31
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_211
BB9_31:
	push	bc
	pop	hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	jr	nz, BB9_34
	bit	0, (ix - 1)
	jr	nz, BB9_34
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_202
BB9_34:
	push	bc
	pop	hl
	ld	de, 4
	or	a, a
	sbc	hl, de
	jr	nz, BB9_36
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_187
BB9_36:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_38
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_202
BB9_38:
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	jr	nz, BB9_40
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_224
BB9_40:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_42
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_199
BB9_42:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	jr	nz, BB9_44
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_222
BB9_44:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	inc	de
	jr	nz, BB9_46
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_175
BB9_46:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_48
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_230
BB9_48:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	nz, BB9_12
	bit	0, (ix - 11)
	jp	z, BB9_232
	jp	BB9_12
BB9_50:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, -1
	jr	nz, BB9_52
	ld	l, 0
BB9_52:
	bit	0, l
	jr	nz, BB9_54
	ld	de, (ix - 10)
	ld	a, e
	or	a, a
	jp	nz, BB9_179
BB9_54:
	bit	0, l
	jr	nz, BB9_57
	bit	0, (ix - 1)
	jr	nz, BB9_57
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_179
BB9_57:
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	nz, BB9_59
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_192
BB9_59:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_61
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_193
BB9_61:
	push	bc
	pop	hl
	ld	de, 2
	or	a, a
	sbc	hl, de
	jr	nz, BB9_63
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_201
BB9_63:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_65
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_205
BB9_65:
	push	bc
	pop	hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	jp	z, BB9_200
	push	bc
	pop	hl
	ld	de, 4
	or	a, a
	sbc	hl, de
	jr	nz, BB9_68
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_214
BB9_68:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_70
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_218
BB9_70:
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	jr	nz, BB9_72
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_221
BB9_72:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_74
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_225
BB9_74:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	jr	nz, BB9_76
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_227
BB9_76:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	jr	nz, BB9_78
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_228
BB9_78:
	push	bc
	pop	hl
	ld	de, 7
	or	a, a
	sbc	hl, de
	jr	nz, BB9_80
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_179
BB9_80:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	nz, BB9_12
	bit	0, (ix - 11)
	jp	z, BB9_231
	jp	BB9_12
BB9_82:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB9_84
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_184
BB9_84:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB9_86
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_190
BB9_86:
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	nz, BB9_88
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_188
BB9_88:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_90
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_191
BB9_90:
	push	bc
	pop	hl
	ld	de, 2
	or	a, a
	sbc	hl, de
	jr	nz, BB9_92
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_196
BB9_92:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_94
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_206
BB9_94:
	push	bc
	pop	hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	jr	nz, BB9_96
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_208
BB9_96:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_98
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_209
BB9_98:
	push	bc
	pop	hl
	ld	de, 4
	or	a, a
	sbc	hl, de
	jr	nz, BB9_100
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_215
BB9_100:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_102
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_219
BB9_102:
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	jr	nz, BB9_104
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_188
BB9_104:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_106
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_191
BB9_106:
	push	bc
	pop	hl
	ld	de, 6
	jp	BB9_136
BB9_107:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB9_109
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_185
BB9_109:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB9_111
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_187
BB9_111:
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	nz, BB9_113
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_197
BB9_113:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_115
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_180
BB9_115:
	push	bc
	pop	hl
	ld	de, 2
	or	a, a
	sbc	hl, de
	jr	nz, BB9_117
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_203
BB9_117:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_119
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_202
BB9_119:
	push	bc
	pop	hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	jr	nz, BB9_121
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_207
BB9_121:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_123
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_193
BB9_123:
	push	bc
	pop	hl
	ld	de, 4
	or	a, a
	sbc	hl, de
	jr	nz, BB9_125
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_216
BB9_125:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_127
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_213
BB9_127:
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	jr	nz, BB9_129
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_217
BB9_129:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_131
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_213
BB9_131:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	jr	nz, BB9_133
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_195
BB9_133:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	inc	de
	jr	nz, BB9_135
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_193
BB9_135:
	push	bc
	pop	hl
BB9_136:
	or	a, a
	sbc	hl, de
	jp	z, BB9_176
	jp	BB9_12
BB9_137:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB9_139
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_186
BB9_139:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB9_141
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_180
BB9_141:
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	jp	z, BB9_181
	push	bc
	pop	hl
	ld	de, 2
	or	a, a
	sbc	hl, de
	jr	nz, BB9_144
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_188
BB9_144:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_146
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_191
BB9_146:
	push	bc
	pop	hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	jr	nz, BB9_148
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_204
BB9_148:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_150
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_212
BB9_150:
	push	bc
	pop	hl
	ld	de, 4
	or	a, a
	sbc	hl, de
	jr	nz, BB9_152
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_187
BB9_152:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_154
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_220
BB9_154:
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	jr	nz, BB9_156
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_223
BB9_156:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_158
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_226
BB9_158:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	jr	nz, BB9_160
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_217
BB9_160:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	inc	de
	jr	nz, BB9_162
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	z, BB9_229
BB9_162:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nz, BB9_164
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_207
BB9_164:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	nz, BB9_12
	bit	0, (ix - 11)
	jr	z, BB9_182
	jp	BB9_12
BB9_166:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB9_178
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	z, BB9_182
	ld	a, (ix - 12)
	cp	a, 2
	jp	z, BB9_198
	cp	a, 3
	jr	z, BB9_196
	cp	a, 4
	jp	z, BB9_210
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	jr	nz, BB9_173
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_222
BB9_173:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	nz, BB9_12
	ld	hl, (ix - 7)
	ld	a, l
	or	a, a
	jp	nz, BB9_12
BB9_175:
	ld	a, 97
	jr	BB9_177
BB9_176:
	xor	a, a
BB9_177:
	ld	sp, ix
	pop	ix
	ret
BB9_178:
	ld	a, 10
	jr	BB9_177
BB9_179:
	ld	a, 32
	jr	BB9_177
BB9_180:
	ld	a, 47
	jr	BB9_177
BB9_181:
	ld	a, 42
	jr	BB9_177
BB9_182:
	ld	a, 45
	jr	BB9_177
BB9_183:
	ld	a, 60
	jr	BB9_177
BB9_184:
	ld	a, 71
	jr	BB9_177
BB9_185:
	ld	a, 126
	jr	BB9_177
BB9_186:
	ld	a, 59
	jr	BB9_177
BB9_187:
	ld	a, 94
	jr	BB9_177
BB9_188:
	ld	a, 84
	jr	BB9_177
BB9_189:
	ld	a, 50
	jr	BB9_177
BB9_190:
	ld	a, 103
	jr	BB9_177
BB9_191:
	ld	a, 116
	jr	BB9_177
BB9_192:
	ld	a, 83
	jr	BB9_177
BB9_193:
	ld	a, 115
	jr	BB9_177
BB9_194:
	ld	a, 8
	jr	BB9_177
BB9_195:
	ld	a, 62
	jr	BB9_177
BB9_196:
	ld	a, 61
	jr	BB9_177
BB9_197:
	ld	a, 124
	jr	BB9_177
BB9_198:
	ld	a, 43
	jr	BB9_177
BB9_199:
	ld	a, 109
	jr	BB9_177
BB9_200:
	ld	a, 44
	jr	BB9_177
BB9_201:
	ld	a, 73
	jr	BB9_177
BB9_202:
	ld	a, 120
	jr	BB9_177
BB9_203:
	ld	a, 88
	jr	BB9_177
BB9_204:
	ld	a, 34
	jr	BB9_177
BB9_205:
	ld	a, 105
	jr	BB9_177
BB9_206:
	ld	a, 121
	jr	BB9_177
BB9_207:
	ld	a, 95
	jr	BB9_177
BB9_208:
	ld	a, 87
	jp	BB9_177
BB9_209:
	ld	a, 119
	jp	BB9_177
BB9_210:
	ld	a, 46
	jp	BB9_177
BB9_211:
	ld	a, 63
	jp	BB9_177
BB9_212:
	ld	a, 41
	jp	BB9_177
BB9_213:
	ld	a, 108
	jp	BB9_177
BB9_214:
	ld	a, 38
	jp	BB9_177
BB9_215:
	ld	a, 90
	jp	BB9_177
BB9_216:
	ld	a, 37
	jp	BB9_177
BB9_217:
	ld	a, 35
	jp	BB9_177
BB9_218:
	ld	a, 55
	jp	BB9_177
BB9_219:
	ld	a, 122
	jp	BB9_177
BB9_220:
	ld	a, 57
	jp	BB9_177
BB9_221:
	ld	a, 36
	jp	BB9_177
BB9_222:
	ld	a, 65
	jp	BB9_177
BB9_223:
	ld	a, 64
	jp	BB9_177
BB9_224:
	ld	a, 77
	jp	BB9_177
BB9_225:
	ld	a, 52
	jp	BB9_177
BB9_226:
	ld	a, 54
	jp	BB9_177
BB9_227:
	ld	a, 33
	jp	BB9_177
BB9_228:
	ld	a, 49
	jp	BB9_177
BB9_229:
	ld	a, 51
	jp	BB9_177
BB9_230:
	ld	a, 80
	jp	BB9_177
BB9_231:
	ld	a, 48
	jp	BB9_177
BB9_232:
	ld	a, 112
	jp	BB9_177
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI9_0
JTI9_0:
	dl	BB9_14
	dl	BB9_50
	dl	BB9_82
	dl	BB9_107
	dl	BB9_137
	dl	BB9_166

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -79
	call	__frameset
	lea	hl, ix - 64
	ld	(ix - 67), hl
	call	_gfx_Begin
	ld	hl, -1048532
	set	0, (hl)
	call	_init_usb
BB10_1:
	call	_kb_Scan
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	7, a
	jp	nz, BB10_29
	call	_usb_HandleEvents
	ld	hl, (_device)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB10_4
	call	_draw_no_device_screen
	jr	BB10_1
BB10_4:
	call	_scan_wifi
	call	_draw_networks
	ld	(ix - 64), 0
	ld	hl, (ix - 67)
	push	hl
	pop	iy
	inc	iy
	ld	bc, 63
	lea	de, iy
	ldir
	or	a, a
	sbc	hl, hl
	ld	(ix - 70), hl
BB10_5:
	ld	(ix - 73), hl
BB10_6:
	call	_kb_Scan
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	7, a
	jp	nz, BB10_29
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	3, a
	jr	z, BB10_9
	ld	hl, (ix - 70)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB10_22
BB10_9:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 1
	call	__sand
	bit	0, l
	jr	z, BB10_11
	ld	de, (_network_count)
	dec	de
	ld	hl, (ix - 70)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB10_23
BB10_11:
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 1
	call	__sand
	bit	0, l
	jr	z, BB10_6
	ld	hl, (ix - 70)
	ld	c, 5
	call	__ishl
	push	hl
	pop	de
	ld	hl, _ssids
	add	hl, de
	ld	(ix - 76), hl
	ld	iy, 0
BB10_13:
	lea	hl, iy
	ld	de, 5000
	or	a, a
	sbc	hl, de
	jp	nc, BB10_27
	ld	(ix - 79), iy
	call	_kb_Scan
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	7, a
	jp	nz, BB10_29
	ld	hl, (ix - 67)
	push	hl
	ld	hl, (ix - 76)
	push	hl
	call	_draw_password_screen
	pop	hl
	pop	hl
	ld	iy, -720868
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	6, a
	jp	nz, BB10_25
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	bc, 1
	call	__sand
	bit	0, l
	jp	nz, BB10_26
	call	_kb_AnyKey
	or	a, a
	jr	z, BB10_21
	call	_get_ascii_from_kb_data
	ld	l, a
	or	a, a
	jr	z, BB10_21
	ld	a, l
	ld	de, (ix - 73)
	push	de
	pop	hl
	ld	bc, 63
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB10_21
	ld	hl, (ix - 67)
	push	hl
	pop	iy
	add	iy, de
	inc	de
	ld	(ix - 73), de
	ld	(iy), a
	ld	(iy + 1), 0
	push	hl
	ld	hl, (ix - 76)
	push	hl
	call	_draw_password_screen
	pop	hl
	pop	hl
BB10_21:
	ld	iy, (ix - 79)
	ld	de, 10
	add	iy, de
	jp	BB10_13
BB10_22:
	ld	hl, (ix - 70)
	dec	hl
	jr	BB10_24
BB10_23:
	ld	hl, (ix - 70)
	inc	hl
BB10_24:
	ld	(ix - 70), hl
	call	_draw_networks
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix - 70)
	ld	de, 10
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	iy
	add	iy, bc
	ld	(ix - 76), iy
	push	bc
	ld	hl, 320
	push	hl
	push	iy
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (ix - 70)
	ld	c, 5
	call	__ishl
	push	hl
	pop	de
	ld	hl, _ssids
	add	hl, de
	ld	de, (ix - 76)
	push	de
	ld	de, 10
	push	de
	jr	BB10_28
BB10_25:
	ld	(ix - 64), 0
	or	a, a
	sbc	hl, hl
	ld	(ix - 73), hl
	jr	BB10_27
BB10_26:
	ld	hl, (ix - 67)
	push	hl
	ld	hl, (ix - 76)
	push	hl
	call	_connect_wifi
	pop	hl
	pop	hl
BB10_27:
	call	_draw_networks
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix - 70)
	ld	de, 10
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	iy
	add	iy, bc
	ld	(ix - 79), iy
	push	bc
	ld	hl, 320
	push	hl
	push	iy
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (ix - 79)
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, (ix - 76)
BB10_28:
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (ix - 73)
	jp	BB10_5
BB10_29:
	call	_gfx_End
	call	_usb_Cleanup
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_network_count
_network_count:
	rb	3

	section	.bss,"aw",@nobits
	public	_device
_device:
	rb	3

	section	.bss,"aw",@nobits
	public	_endpoint_in
_endpoint_in:
	rb	3

	section	.bss,"aw",@nobits
	public	_endpoint_out
_endpoint_out:
	rb	3

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"No USB device connected.", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"Please connect a USB device.", 0

	section	.bss,"aw",@nobits
	public	_ssids
_ssids:
	rb	640

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"SSID:", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"Password:", 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"SCAN", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	",", 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"CONNECT %s %s", 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"CONNECTED", 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"Connected successfully!", 0

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"Connection failed!", 0

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	_usb_Init
	extern	_usb_GetDescriptor
	extern	__Unwind_SjLj_Register
	extern	_gfx_End
	extern	__inot
	extern	_usb_ResetDevice
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	_strstr
	extern	_strncpy
	extern	_snprintf
	extern	_usb_ScheduleTransfer
	extern	__sand
	extern	__ishl
	extern	_strlen
	extern	__setflag
	extern	_usb_Cleanup
	extern	__frameset
	extern	_kb_AnyKey
	extern	_gfx_FillRectangle_NoClip
	extern	_kb_Scan
	extern	_usb_GetDeviceEndpoint
	extern	_usb_HandleEvents
	extern	_usb_SetConfiguration
	extern	_gfx_SwapDraw
	extern	_gfx_FillScreen
	extern	_usb_Transfer
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_SetColor
	extern	_strtok
	extern	__imulu
	extern	_gfx_PrintStringXY
